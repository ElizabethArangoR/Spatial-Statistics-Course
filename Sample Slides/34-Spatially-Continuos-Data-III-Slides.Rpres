Spatially Continuous Data III
========================================================
author: Megan Coad and Alexis Polidoro 
date: 
autosize: true

Key Concepts
========================================================

- Measuring Spatial Dependence
- Semivarance, covariance
- Variographic Analysis

Recall: Residual Spatial Pattern
========================================================

- Trend surface analysis using Voronoi polygons, IDW, K-point means 
- Built-in mechanism for estimating unertainty of predictions
- ISSUE: We do not know the exact value at $p$ 

Interpolation and Randomness
========================================================

- Residuals are spatially dependent
- Allows us to make simple interpolations
- If residuals were random, it would be more difficult to interpolate

***

```{r, echo=FALSE}
library(tidyverse)
library(spdep)
library(plotly)
library(gstat)
library(geog4ga3)
data("Walker_Lake")
Walker_Lake <- mutate(Walker_Lake,
                        X3 = X^3, X2Y = X^2 * Y, X2 = X^2, 
                        XY = X * Y,
                        Y2 = Y^2, XY2 = X * Y^2, Y3 = Y^3)
WL.trend3 <- lm(formula = V ~ X3 + X2Y + X2 + X + XY + Y + Y2 + XY2 + Y3, 
                data = Walker_Lake)
Walker_Lake$residual3 <- ifelse(WL.trend3$residuals > 0, "Positive", "Negative")
ggplot(data = Walker_Lake, 
       aes(x = X, y = Y)) +
  geom_point(aes(color = residual3)) +
  geom_point(data = data.frame(x = c(160, 240, 12, 120), y = c(38, 280, 240, 180)), 
             aes(x = x, y = y), shape = 15, size = 3) +
  coord_equal()
```

Measuring Spatial Dependence
========================================================
- Critical for investigating residual patterns (beyond positive + negative)
- We can measure spatial patterns using Moran's I
- Moran's I measures spatial dependence at a SINGLE SCALE - where the spatial weights are defined (i.e. adjacency)

Measuring Spatial Dependence: Correlograms
========================================================
- Sequence of Moran's I over different scales 
- Autocorrelation is stronger at a smaller scale
- Problem: does not account for distance, but number of observations

***

```{r, echo=FALSE}
k <- c(10:30)
moranI <- numeric(length = length(k))
correlogram <- data.frame(k, moranI)
for(i in 1:length(k)){
  listwk <- nb2listw(knn2nb(knearneigh(as.matrix(Walker_Lake[,2:3]), k = k[i])))
  m <- moran.test(x = WL.trend3$residuals, listw = listwk)
  correlogram$moranI[i] <- m$estimate[1]
}
ggplot(data = correlogram, aes(x = k, y = moranI)) + 
  geom_point()

```

Autocovariance
========================================================
- Recall covariance: How 2 variables are related, either positively or inversely
- Autocovariance: Covariance of the process with itself at different locations
- Distances are spatially related if equal to a predefined spatial lag, $h$

***

$$
w_{ij}(h)=\bigg\{\begin{array}{l l}
1\text{ if } d_{ij} = h\\
0\text{ otherwise}\\
\end{array}
$$


The Spatial Lag, h
========================================================
- Changing the spatial lag $h$ allows us to calculate autocovariance at different scales 
- i.e.Covariogram & Semivariogram
- Pairs of are formed with observations at an appriximate lag $h$

Semivariograms
========================================================
- Numbers: pairs of observations used to calculate the semivariance at the corresponding lag

***
```{r, echo=FALSE}
Walker_Lake.sp <- Walker_Lake
coordinates(Walker_Lake.sp) <- ~ X + Y
variogram_z <- variogram(V ~ 1, data = Walker_Lake.sp)
ggplot(data = variogram_z, aes(x = dist, y = gamma)) +
  geom_point() + 
  geom_text(aes(label = np), nudge_y = -1500) +
  xlab("Distance") + ylab("Semivariance")
```


Covariograms
========================================================
- Estimate spatial dependence at any lag within the domain of the data
- Autocovariance is stronger at shorter spatial lags

***

```{r, echo=FALSE}
s2 <- var(Walker_Lake$V)
ggplot(data = variogram_z, aes(x = dist, y = s2 - gamma)) +
  geom_point() + 
  geom_text(aes(label = np), nudge_y = -1500) +
  xlab("Distance") + ylab("Autocovariance")
```

Anatomy of a Semivariogram
========================================================
- Sill: point where there is no more or less similarity beween observations than would be implied by the variance of the sample
- Range: distance at which the sill is reached
- Nugget: Distance from origin to a discontinuity

***

![Figure 3. Elements of a semivariogram](semivariogram.jpg)

Fitting a Model to a Semivariogram
========================================================
- A set of models can be passed as an argument to `fit.variogram`; output is the model that provides the best fit to the empirical semivariogram

```{r, evaluate=FALSE}
variogram_z.t <- fit.variogram(variogram_z, model = vgm("Exp", "Sph", "Gau"))
```

Exponential Semivariogram
========================================================

```{r, echo=FALSE}
plot(variogramLine(vgm(1, "Exp", 1), 10), type = 'l')
```

Spherical Semivariogram
========================================================

```{r, echo=FALSE}
plot(variogramLine(vgm(1, "Sph", 1), 10), type = 'l')
```

Gaussian Semivariogram
========================================================

```{r, echo=FALSE}
plot(variogramLine(vgm(1, "Gau", 1), 10), type = 'l')
```

Concluding Remarks
========================================================
- Single-scale attributes of Moran's I are further explored through autocovariance
- We use variograms to illustrate autocovariance of spatially continuous data
